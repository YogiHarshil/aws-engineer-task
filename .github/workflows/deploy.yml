name: CI/CD - Terraform + Docker + ECR

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AWS_REGION: ap-south-1
  ECR_REPO: your-ecr-repository-name
  IMAGE_TAG: ${{ github.sha }}

jobs:
  docker-ecr-terraform:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [dev, stage, prod]

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: Build, tag, and push Docker image to ECR
        run: |
          IMAGE_URI=${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}
          docker build -t $IMAGE_URI ./app
          docker push $IMAGE_URI
        env:
          IMAGE_TAG: ${{ env.IMAGE_TAG }}

      - name: Update Terraform variables
        run: |
          mkdir -p terraform
          echo 'image_uri = "${{ secrets.ECR_REPOSITORY }}:${{ env.IMAGE_TAG }}"' > terraform/image.auto.tfvars
          echo 'acm_certificate_arn = "${{ secrets.ACM_CERTIFICATE_ARN }}"' >> terraform/image.auto.tfvars

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Validate
        working-directory: ./terraform
        run: terraform validate

      - name: Terraform Plan
        working-directory: ./terraform
        run: terraform plan -var-file="${{ matrix.env }}.tfvars" -out="${{ matrix.env }}.tfplan"

      - name: Terraform Apply (Manual Trigger Only)
        working-directory: ./terraform
        if: github.event_name == 'workflow_dispatch'
        run: terraform apply -auto-approve "${{ matrix.env }}.tfplan"
